<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PHP on Nodjoy</title>
    <link>https://nodjoy.com/tags/php/</link>
    <description>Recent content in PHP on Nodjoy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 17 Jul 2022 19:38:37 +0800</lastBuildDate><atom:link href="https://nodjoy.com/tags/php/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PHP获取mp4和m3u8视频时长的方法</title>
      <link>https://nodjoy.com/note/202207/duration.html</link>
      <pubDate>Sun, 17 Jul 2022 19:38:37 +0800</pubDate>
      
      <guid>https://nodjoy.com/note/202207/duration.html</guid>
      <description>PHP获取mp4视频时长 使用getid3获取mp4视频时长(同样适用于mp3等其他媒体文件) $getid3 = new getID3; $file = &amp;#39;./test.mp4&amp;#39;; $info = $getid3-&amp;gt;analyze($file); $playtime_seconds = $info[&amp;#39;playtime_seconds&amp;#39;]; $duration = gmdate(&amp;#34;H:i:s&amp;#34;, $playtime_seconds); //将秒换算为</description>
    </item>
    
    <item>
      <title>Ubuntu搭建LNMP环境</title>
      <link>https://nodjoy.com/leaf/20211110/lnmp.html</link>
      <pubDate>Wed, 10 Nov 2021 16:59:27 +0800</pubDate>
      
      <guid>https://nodjoy.com/leaf/20211110/lnmp.html</guid>
      <description>安装Nginx sudo apt install nginx 安装MySQL sudo apt install mysql-server-5.7 添加php源 sudo add-apt-repository ppa:ondrej/php sudo apt update 也可以使用ppa国内源 deb https://launchpad.proxy.ustclug.org/ondrej/php/ubuntu focal main 安装PHP sudo apt install php7.4 sudo apt install php7.4-fpm 安装PHP扩展 sudo</description>
    </item>
    
    <item>
      <title>Homestead环境搭建</title>
      <link>https://nodjoy.com/note/202105/installhd.html</link>
      <pubDate>Tue, 18 May 2021 15:20:48 +0800</pubDate>
      
      <guid>https://nodjoy.com/note/202105/installhd.html</guid>
      <description>准备工作 环境 OS: Windows 10 安装所需软件 Git Vagrant VitrualBox xshell Navicat 生成SSH Key 在用户家目录运行： cd ~ ssh-keygen -t rsa -C &amp;#34;youemail@homestead.com&amp;#34; 此时，会生成以下的文件 安装Homestead (还可以直接</description>
    </item>
    
    <item>
      <title>Ubuntu-安装PHP启动报错php: error while loading shared libraries: libcrypto.so.1.0.0: cannot open shared object file: No such file or directory解决办法</title>
      <link>https://nodjoy.com/note/202105/phperror.html</link>
      <pubDate>Sat, 08 May 2021 10:36:36 +0800</pubDate>
      
      <guid>https://nodjoy.com/note/202105/phperror.html</guid>
      <description>Ubuntu-使用宝塔面板安装PHP后启动报错：php: error while loading shared libraries: libcrypto.so.1.0.0: cannot open shared object file: No such file or directory 解决办法 前往http://security.ubun</description>
    </item>
    
    <item>
      <title>PHP&amp;kuaidi.com实现快递查询</title>
      <link>https://nodjoy.com/leaf/202101/kuaidiapi.html</link>
      <pubDate>Tue, 26 Jan 2021 16:14:21 +0800</pubDate>
      
      <guid>https://nodjoy.com/leaf/202101/kuaidiapi.html</guid>
      <description>申请快递查询API授权key kuaidi.com SDK文件KDApi.php /** * 物流信息查询接口SDK */ class KDAPI{ private $_APPKEY = &amp;#39;twde5d8ef***********&amp;#39;; //改为您自己的key private $_APIURL = &amp;#34;https://highapi.kuaidi.com/openapi-querycountordernumber.html?&amp;#34;; private $_show = 0; private $_muti</description>
    </item>
    
    <item>
      <title>PHP-微信公众号实现发送模板消息</title>
      <link>https://nodjoy.com/leaf/2020/12/15/wechat01/</link>
      <pubDate>Tue, 15 Dec 2020 11:19:55 +0800</pubDate>
      
      <guid>https://nodjoy.com/leaf/2020/12/15/wechat01/</guid>
      <description>PHP微信公众号实现发送模板消息 $appid = &amp;#34;wxb7729*******&amp;#34;; $appsecret = &amp;#34;8b99**************&amp;#34;; $url = &amp;#34;https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;amp;appid=$appid&amp;amp;secret=$appsecret&amp;#34;; $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); $output = curl_exec($ch); curl_close($ch); $jsoninfo = json_decode($output, true); $ACCESS_TOKEN = $jsoninfo[&amp;#34;access_token&amp;#34;]; $data=array( &amp;#39;touser&amp;#39;=&amp;gt;&amp;#34;oaIgKt*********&amp;#34;, //要发送给用户的openid &amp;#</description>
    </item>
    
    <item>
      <title>php安装Oracle扩展oci8</title>
      <link>https://nodjoy.com/leaf/2020/10/26/php_oci8/</link>
      <pubDate>Mon, 26 Oct 2020 10:30:00 +0800</pubDate>
      
      <guid>https://nodjoy.com/leaf/2020/10/26/php_oci8/</guid>
      <description>安装oracle-instantclient 下载地址 分别下载 oracle-instantclient11.2-basic-11.2.0.4.0-1.x86_64.rpm oracle-instantclient11.2-devel-11.2.0.4.0-1.x86_64.rpm 运行 rpm -ivh oracle-instantclient11.2-* 此时会生成/usr/lib/oracle/11/2/client6</description>
    </item>
    
    <item>
      <title>Laravel Api开发之Dingo&amp;Jwt的使用</title>
      <link>https://nodjoy.com/note/2020/09/22/laravel_dingo/</link>
      <pubDate>Tue, 22 Sep 2020 15:02:17 +0800</pubDate>
      
      <guid>https://nodjoy.com/note/2020/09/22/laravel_dingo/</guid>
      <description>Dingo 安装组件 composer require dingo/api:2.x 生成配置文件 php artisan vendor:publish 执行命令后会生成config/api.php配置文件 config/api.php 配置说明 #接口围绕：[x]本地和私有环境 [prs]公</description>
    </item>
    
    <item>
      <title>Larvel-使用Seeder生成测试数据</title>
      <link>https://nodjoy.com/note/2020/08/24/laravel05/</link>
      <pubDate>Mon, 24 Aug 2020 15:38:00 +0800</pubDate>
      
      <guid>https://nodjoy.com/note/2020/08/24/laravel05/</guid>
      <description>生成Seeder文件 php artisan make:seeder UserSeeder 运行后会在database/seeds目录下生成UserSeeder.php 文件 编辑UserSeeder.php</description>
    </item>
    
    <item>
      <title>使用Laravel邮件发送实现用户的验证&amp;注册业务</title>
      <link>https://nodjoy.com/note/2020/08/04/laravel09/</link>
      <pubDate>Tue, 04 Aug 2020 17:21:13 +0800</pubDate>
      
      <guid>https://nodjoy.com/note/2020/08/04/laravel09/</guid>
      <description>注册数据处理方法中添加token并触发邮件发送 //用户注册数据处理 public function store(Request $request) { $data = $this-&amp;gt;validate($request,[ &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;required|min:4&amp;#39;, &amp;#39;email&amp;#39; =&amp;gt; &amp;#39;required|email|unique:users&amp;#39;, &amp;#39;password&amp;#39; =&amp;gt; &amp;#39;required|min:6|confirmed&amp;#39;, ]); $data[&amp;#39;password&amp;#39;] = bcrypt($data[&amp;#39;password&amp;#39;]); $data[&amp;#39;email_token&amp;#39;] = Str::random(10); $user = User::create($data); //发送注册邮件 \Mail::to($user)-&amp;gt;send(new RegMail($user));</description>
    </item>
    
    <item>
      <title>Laravel Api开发之laravel/passport授权包的使用及基本配置</title>
      <link>https://nodjoy.com/note/2020/07/31/laravel06/</link>
      <pubDate>Fri, 31 Jul 2020 17:18:54 +0800</pubDate>
      
      <guid>https://nodjoy.com/note/2020/07/31/laravel06/</guid>
      <description>安装laravel/passport composer require laravel/passport=~7.0 指定为7.0版本，laravel5.8不支持8.0及以上版本 创建所需的表 php artisan migrate 生成secret php artisan</description>
    </item>
    
    <item>
      <title>Laravel基础04-视图</title>
      <link>https://nodjoy.com/note/2020/07/23/laravel04/</link>
      <pubDate>Thu, 23 Jul 2020 10:35:48 +0800</pubDate>
      
      <guid>https://nodjoy.com/note/2020/07/23/laravel04/</guid>
      <description>Blade模板引擎的模板继承构建后台界面 后台视图文件目录 -/resources/views/admin/layout 为父级模板目录 使用@yield占位定义活动的页面范围 &amp;lt;div&amp;gt; @yield(&amp;#39;content&amp;#39;) &amp;lt;/div&amp;gt; 子页面继承父级模板 @extends(&amp;#39;admin.layout.master&amp;#39;) @section(&amp;#39;content&amp;#39;) &amp;lt;div</description>
    </item>
    
    <item>
      <title>Laravel基础03-中间件的使用</title>
      <link>https://nodjoy.com/note/2020/07/22/laravel03/</link>
      <pubDate>Wed, 22 Jul 2020 17:06:05 +0800</pubDate>
      
      <guid>https://nodjoy.com/note/2020/07/22/laravel03/</guid>
      <description>使用中间件进行后台权限验证 创建中间件 php artisan make:middleware AdminMiddleware 执行后会在app/Http/Middleware目录下生成AdminMiddleware.php</description>
    </item>
    
    <item>
      <title>Laravel基础02-后台登录验证</title>
      <link>https://nodjoy.com/note/2020/07/21/laravel02/</link>
      <pubDate>Tue, 21 Jul 2020 13:29:04 +0800</pubDate>
      
      <guid>https://nodjoy.com/note/2020/07/21/laravel02/</guid>
      <description>创建后台控制器 php artisan make:controller Admin/EntryController 配置路由 Route::get(&amp;#39;/login&amp;#39;,&amp;#39;Admin\EntryController@loginForm&amp;#39;); 或者采用配置命名空间的方式指定到Admin目录，简化一些重复代码 Route::group([&amp;#39;prefix&amp;#39; =&amp;gt; &amp;#39;admin&amp;#39;,&amp;#39;namespace&amp;#39; =&amp;gt; &amp;#39;Admin&amp;#39;],function(){ Route::get(&amp;#39;/login&amp;#39;,&amp;#39;EntryController@loginForm&amp;#39;); }); 使用Auth登录验证 编辑con</description>
    </item>
    
    <item>
      <title>Laravel基础01-安装配置</title>
      <link>https://nodjoy.com/note/2020/07/16/laravel01/</link>
      <pubDate>Thu, 16 Jul 2020 10:30:47 +0800</pubDate>
      
      <guid>https://nodjoy.com/note/2020/07/16/laravel01/</guid>
      <description>安装 composer安装 composer命令： composer create-project --prefer-dist laravel/laravel hd Laravel目录： 安装提示工具 前往PHP应用商店packagist.org下载安装</description>
    </item>
    
  </channel>
</rss>
